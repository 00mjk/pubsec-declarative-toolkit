apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata: # kpt-merge: ${NAMESPACE}/${CLUSTER_NAME}-net
  name: sandbox-net # kpt-set: ${cluster-name}-net
  namespace: config-control # kpt-set: ${namespace}
  annotations:
    cnrm.cloud.google.com/project-id: "sandbox-00000" # kpt-set: ${sandbox-project-id}  
spec:
  autoCreateSubnetworks: false
  routingMode: REGIONAL
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata: # kpt-merge: ${NAMESPACE}/${CLUSTER_NAME}-subnet
  name: sandbox-subnet # kpt-set: ${cluster-name}-subnet
  namespace: config-control # kpt-set: ${namespace}
  annotations:
    cnrm.cloud.google.com/project-id: "sandbox-00000" # kpt-set: ${sandbox-project-id}  
spec:
  ipCidrRange: 10.2.0.0/16
  networkRef:
    name: sandbox-net # kpt-set: ${cluster-name}-net
  region: northamerica-northeast1 # kpt-set: ${region}
  logConfig:
    aggregationInterval: INTERVAL_10_MIN
    flowSampling: 0.5
    metadata: INCLUDE_ALL_METADATA
  secondaryIpRange:
    - ipCidrRange: 10.3.0.0/16
      rangeName: servicesrange
    - ipCidrRange: 10.4.0.0/16
      rangeName: clusterrange
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouter
metadata: # kpt-merge: ${NAMESPACE}/computerouternat-dep-forallsubnets
  name: router-sandbox-net # kpt-set: router-${cluster-name}-net
  namespace: config-control # kpt-set: ${namespace}
  annotations:
    cnrm.cloud.google.com/project-id: "sandbox-00000" # kpt-set: ${sandbox-project-id}  
spec:
  description: example router description
  networkRef:
    name: sandbox-net # kpt-set: ${cluster-name}-net
  region: northamerica-northeast1 # kpt-set: ${region}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouterNAT
metadata: # kpt-merge: ${NAMESPACE}/computerouternat-sample-forallsubnets
  name: nat-sandbox-net # kpt-set: nat-${cluster-name}-net
  namespace: config-control # kpt-set: ${namespace}
  annotations:
    cnrm.cloud.google.com/project-id: "sandbox-00000" # kpt-set: ${sandbox-project-id}  
spec:
  natIpAllocateOption: AUTO_ONLY
  region: northamerica-northeast1 # kpt-set: ${region}
  routerRef:
    name: router-sandbox-net # kpt-set: router-${cluster-name}-net
  sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
