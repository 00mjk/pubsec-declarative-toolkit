apiVersion: core.cnrm.cloud.google.com/v1beta1
kind: ConfigConnectorContext
metadata:
  name: configconnectorcontext.core.cnrm.cloud.google.com
  namespace: sandbox # kpt-set: ${sandbox-namespace}
spec:
  googleServiceAccount: sandbox-project-id@config-controller-project-id.iam.gserviceaccount.com # kpt-set: ${sandbox-project-id}@${management-project-id}.iam.gserviceaccount.com
---
# Create GCP ServiceAccount for use by KCC to manage resources in this project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: sandbox-project-id # kpt-set: ${sandbox-project-id}
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: config-controller-project-id # kpt-set: ${management-project-id}
spec:
  displayName: sandbox-project-id # kpt-set: ${sandbox-project-id}
---
# Allow KCC's Kubernetes Service Account to use the GCP ServiceAccount
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata:
  name: sandbox-project-id-sa-workload-identity-binding # kpt-set: ${sandbox-project-id}-sa-workload-identity-binding
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: config-controller-project-id # kpt-set: ${management-project-id}
spec:
  resourceRef:
    name: sandbox-project-id # kpt-set: ${sandbox-project-id}
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
  bindings:
    - role: roles/iam.workloadIdentityUser
      members:
        - member: serviceAccount:config-controller-project-id.svc.id.goog[cnrm-system/cnrm-controller-manager-sandbox] # kpt-set: serviceAccount:${management-project-id}.svc.id.goog[cnrm-system/cnrm-controller-manager-${sandbox-namespace}]
