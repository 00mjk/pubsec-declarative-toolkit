# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
######
#
#
#  Logging and Monitoring Services to be compliant with Guardrails 11 Logging and Monitoring
#  https://github.com/canada-ca/cloud-guardrails/blob/master/EN/11_Logging-and-Monitoring.md
#
#
#####
# Storage Bucket Org LogSink
apiVersion: logging.cnrm.cloud.google.com/v1beta1
kind: LoggingLogSink
metadata: # kpt-merge: guardrails/storage-logsink
  name: storage-logsink
  namespace: guardrails # kpt-set: ${guardrails-namespace}
spec:
  destination:
    storageBucketRef:
      # StorageBucket names must be globally unique. Replace ${PROJECT_ID?} with your project ID.
      name: 000000000000-logginglogsink-org # kpt-set: ${org-id}-logginglogsink-${department-code}
  filter: |
    resource.type="organization" AND
    logName: /logs/cloudaudit.googleapis.com%2Factivity OR
    logName: /logs/cloudaudit.googleapis.com%2Fsystem_event OR
    logName: /logs/cloudaudit.googleapis.com%2Fdata_access OR
    logName: /logs/compute.googleapis.com%2Fvpc_flows OR
    logName: /logs/compute.googleapis.com%2Ffirewall OR
    logName: /logs/cloudaudit.googleapis.com%2Faccess_transparency
  organizationRef:
    # Replace "${ORG_ID?}" with the numeric ID for your organization
    external: "000000000000" # kpt-set: ${org-id}
---
apiVersion: storage.cnrm.cloud.google.com/v1beta1
kind: StorageBucket
metadata: # kpt-merge: guardrails/0000000000-logginglogsink_${department-code}
  # StorageBucket names must be globally unique. Replace ${PROJECT_ID?} with your project ID.
  name: 000000000000-logginglogsink-org # kpt-set: ${org-id}-logginglogsink-${department-code}
  namespace: guardrails # kpt-set: ${guardrails-namespace}
  annotations:
    cnrm.cloud.google.com/force-destroy: "true"
    cnrm.cloud.google.com/project-id: guardrails-0000000 # kpt-set: ${guardrails-project-id}    
spec:
  location: northamerica-northeast1
  storageClass: REGIONAL
  uniformBucketLevelAccess: true
---
# PubSub Log Sink
apiVersion: logging.cnrm.cloud.google.com/v1beta1
kind: LoggingLogSink
metadata: # kpt-merge: guardrails/pubsub-logsink
  name: pubsub-logsink # kpt-merge: pubsub-logsink_${department-code}
  namespace: guardrails # kpt-set: ${guardrails-namespace}
spec:
  destination:
    pubSubTopicRef:
      name: logginglogsink-org # kpt-set: logginglogsink-${department-code}
  filter: resource.type="bigquery_project" AND logName:"cloudaudit.googleapis.com"
  organizationRef:
    external: "000000000000" # kpt-set: ${org-id}
---
#########
# PubSub Instance
apiVersion: pubsub.cnrm.cloud.google.com/v1beta1
kind: PubSubTopic
metadata: # kpt-merge: guardrails/logginglogsink_${department-code}
  name: logginglogsink-org # kpt-set: logginglogsink-${department-code}
  namespace: guardrails # kpt-set: ${guardrails-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: guardrails-0000000 # kpt-set: ${guardrails-project-id}
---
#########
# BigQuery Log Sink
apiVersion: logging.cnrm.cloud.google.com/v1beta1
kind: LoggingLogSink
metadata: # kpt-merge: guardrails/bigquery-logsink
  name: bigquery-logsink # kpt-merge: bigquery-logsink_${department-code}
  namespace: guardrails # kpt-set: ${guardrails-namespace}
spec:
  destination:
    bigQueryDatasetRef:
      name: bqlogginglogsinkorg # kpt-set: bqlogginglogsink${department-code}
  filter: resource.type="bigquery_project" AND logName:"cloudaudit.googleapis.com"
  organizationRef:
    external: "000000000000" # kpt-set: ${org-id}
---
#########
# Big Query Instance
apiVersion: bigquery.cnrm.cloud.google.com/v1beta1
kind: BigQueryDataset
metadata: # kpt-merge: guardrails/logginglogsink
  name: bqlogginglogsinkorg # kpt-set: bqlogginglogsink${department-code}
  namespace: guardrails # kpt-set: ${guardrails-namespace}
  annotations:
    cnrm.cloud.google.com/delete-contents-on-destroy: "true"
spec:
  location: northamerica-northeast1
  projectRef:
    external: guardrails-0000000 # kpt-set: ${guardrails-project-id}
